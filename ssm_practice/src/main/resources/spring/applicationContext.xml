<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns:context="http://www.springframework.org/schema/context"       xmlns:tx="http://www.springframework.org/schema/tx"       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">    <!-- 引入外部properties文件 -->    <context:property-placeholder location="classpath:db-config.properties"/>    <!-- 配置数据库连接池 -->    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">        <property name="jdbcUrl" value="${c3p0.url}"/>        <property name="driverClass" value="${c3p0.driver}" />        <property name="user" value="${c3p0.username}"/>        <property name="password" value="${c3p0.password}"/>    </bean>    <!-- 配置mybatis和spring的整合 -->    <bean id="sqlsessionfactory" class="org.mybatis.spring.SqlSessionFactoryBean">        <!-- 指定mybatis全局配文件(mybatis-config.xml) -->        <property name="configLocation" value="classpath:mybatis-config.xml"/>        <property name="dataSource" ref="pooledDataSource"/>        <!-- 指定mybatis的mapper文件路径 -->        <property name="mapperLocations" value="classpath:mapper/*.xml"/>    </bean>    <!-- 配置mybatis接口的实现 -->    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">        <!-- 扫描所有dao接口 , 添加到IOC当中 -->        <property name="basePackage" value="top.gn.ssm.dao"/>        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />    </bean>    <!--    较新的方式    <mybatis-spring:scan base-package="top.gn.ssm.dao"></mybatis-spring:scan>    -->    <!-- spring的事务管理 -->    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">        <property name="dataSource" ref="pooledDataSource"/>    </bean>    <!-- 开启基于注解的事务管理(aop) , 使用时在方法上加入@Transactional-->    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/></beans>